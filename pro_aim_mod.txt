@name Pro Aim Mod
@persist Target:entity OldTarget:entity

function void gotoPos(Pos:vector, Prop:entity){
    Prop:applyForce((((Pos-Prop:pos())*10) - Prop:vel())*Prop:mass())
}

interval(100)

if (first()|dupefinished()){
    dsJoinGroup("Security")
    dsSetScope(2)
    
    Target = noentity()
}


Weapon = owner():weapon():type()

if (Weapon == "weapon_ar2"){
    Class = "prop_combine_ball"
}
elseif(Weapon == "weapon_frag"){
    Class = "npc_grenade_frag"
}
else{
    Class = "energy_pulse"
}

if (owner():keyUse()){
    Target = owner():aimEntity()
    if (Target != OldTarget){
        if (Target){
            print(Target)
        }
        else{
            print("Unlocked")
        }
    }
    OldTarget = Target
}

if (dsClk("KillAll")){
    Ent = dsGetEntity()
    if (Ent == owner()){
        Target = owner()
    }
}

#print(Weapon)
#findInSphere(entity():pos(),1000)

findByClass(Class)
Ents = findToArray()

for (X=1,Ents:count()){
    Ent = Ents[X,entity]
    if (Ent != entity()&Target){
        Height = vec(0,0,Target:height()/2)
        gotoPos(Target:toWorld(Height),Ent)
        #print(Ent:type())
    }
}
