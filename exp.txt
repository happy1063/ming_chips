@name 
@inputs 
@outputs Vell
@persist Count ExplosionPower ExplosionTime Ent:entity WaterP Bounce Center:vector Mass ExplosionBool Rangers:array ExplosionSpeed Velocity:array Doned:array Gravity Time:array CurScale Pos2:vector Dir:angle Power:vector Scale AirP HitRang:ranger Pos:vector Vel:vector
runOnTick(1) 
if(first()){
Vell=5000
Count=20
ExplosionPower=100
ExplosionTime=1000
ExplosionBool=0
ExplosionSpeed=3000
Gravity=2
Scale=30
AirP=0.01
Bounce=0.6
Mass=50
WaterP=0.03
#function getAng(Pos:vector,Vel:vector){
  #  return (rangerOffset(Pos,Pos+vec(100000,-5,0):rotate(Vel:toAngle())):pos()-rangerOffset(Pos,Pos+vec(100000,5,0):rotate(Vel:toAngle())):pos()):toAngle()
#    }
for(I=1,Count){
    CurScale=randint(Scale/1.5,Scale*1.5)
    holoCreate(I,Center)
    holoDisableShading(I,1)
    holoEntity(I):setModel("models/hunter/misc/sphere075x075.mdl")
    holoScaleUnits(I,vec(CurScale,CurScale,CurScale))
    holoMaterial(I,"models/debug/debugwhite")
   # holoColor(I,vec(0,0,0))
   # holoVisible(I,players(),0)
  #  holoVisible(I,owner(),1)
    }
holoCreate(Count+1,Center)
holoMaterial(Count+1,"null")
timer("exp",ExplosionTime)
}
if(changed(owner():keyPressed("g"))&owner():keyPressed("g")&ExplosionBool==0){
#effectSpawn("explosion",Center,1)
ExplosionBool=1
for(I=1,Count){
    Power=vec(randint(ExplosionSpeed/5,ExplosionSpeed),0,0)
    Dir=(owner():aimPos()-Center):toAngle()+ang(randint(10,-10),randint(10,-10),0)
    #ang(randint(-360,360),randint(-360,360),randint(-360,360))
    Rangers:insertRanger(I,rangerOffset(Center,Center+vec(0,0,50)+vec(randint(ExplosionPower/5,ExplosionPower),0,0):rotate(Dir)))
    holoPos(I,Rangers[I,ranger]:pos())
    Velocity:pushVector(Power:rotate(Dir))
    }
}
if(owner():keyPressed("r")){
    reset()
    }
Center=owner():shootPos()+vec(0,0,50)
if(ExplosionBool==0){
    for(I=1,Count+1){
        holoPos(I,Center)
        }
    }
if(ExplosionBool==1){
for(I=1,Count){
if(Doned[I,number]==0){
        Vel=Velocity[I,vector]
        Pos=holoEntity(I):pos()
        rangerFilter(owner())
        HitRang=rangerOffset(Pos,Pos+(Vel/26))
        Ent=HitRang:entity()
        holoPos(I,Pos+(HitRang:pos()-Pos))
       # Velocity:clear()
if(HitRang:hit()){
Time[I,number]=0
#Velocity[I,vector]=
    }
if(HitRang:hit()){
    
 #   holoEntity(I):emitSound("garrysmod/balloon_pop_cute.wav")
    }
#if(Ent:isValid()&Ent:isPlayer()){
#    holoDelete(I)
   # owner():weapon():shootTo(Ent:shootPos(),(Ent:pos()-Ent:shootPos()):normalized(),0,0,10,"")
#    holoParent(I,Ent)
#    holoVisible(I,players(),1)
#    holoVisible(I,Ent,0)
#    }
if(!HitRang:hit()){    
        holoAng(I,Vel:toAngle())  
        Time[I,number]=max(Time[I,number],9.8)+1
        Velocity[I,vector]=(Vel/(AirP+1)-vec(0,0,(Gravity)*(Time[I,number])))
}
if(holoEntity(I):isUnderWater()){
    Velocity[I,vector]=(Vel*WaterP)-vec(0,0,(Gravity/(500/Mass))*(Time[I,number]))
    }
if(HitRang:hit()){
    Velocity[I,vector]=vec(Vel:length(),0,0):rotate(Vel:toAngle()+ang(-45,0,0))
   # Doned[I,number]=1
    }
Pos2=holoEntity(I):pos()
}
}
}

